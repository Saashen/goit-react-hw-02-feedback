{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistic/Statistic.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["FeedbackOptions","onLeaveFeedback","type","onClick","name","Statistic","label","value","Statistics","good","neutral","bad","total","positivePercentage","Section","title","state","Notification","message","defaultProps","App","countClickAmount","target","setState","prevState","countTotalFeedback","Object","values","reduce","acc","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","document","getElementById"],"mappings":"kOAqBeA,EAlBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAH,OACtB,oCACE,4BAAQC,KAAK,SAASC,QAASF,EAAiBG,KAAK,QAArD,QAGA,4BAAQF,KAAK,SAASC,QAASF,EAAiBG,KAAK,WAArD,WAGA,4BAAQF,KAAK,SAASC,QAASF,EAAiBG,KAAK,OAArD,SCGWC,EAXG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OAChB,2BACGD,EADH,KACYC,ICiBCC,EAlBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,oCACE,kBAAC,EAAD,CAAWP,MAAM,OAAOC,MAAOE,IAC/B,kBAAC,EAAD,CAAWH,MAAM,UAAUC,MAAOG,IAClC,kBAAC,EAAD,CAAWJ,MAAM,MAAMC,MAAOI,IAC9B,kBAAC,EAAD,CAAWL,MAAM,QAAQC,MAAOK,IAChC,kBAAC,EAAD,CAAWN,MAAM,oBAAoBC,MAAOM,MC8BjCC,EAnCC,SAAC,GAAD,IACdC,EADc,EACdA,MACAC,EAFc,EAEdA,MACAJ,EAHc,EAGdA,MACAC,EAJc,EAIdA,mBACAZ,EALc,EAKdA,gBALc,OAOd,oCACE,4BAAe,eAAVc,EAAyB,aAAe,yBAClC,eAAVA,EACC,kBAAC,EAAD,CACEN,KAAMO,EAAMP,KACZC,QAASM,EAAMN,QACfC,IAAKK,EAAML,IACXC,MAAOA,EACPC,mBAAoBA,IAGtB,kBAAC,EAAD,CAAiBZ,gBAAiBA,MCpBlCgB,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,2BAAIA,IAGbD,EAAaE,aAAe,CAC1BD,QAAS,IAOID,QCXMG,E,2MACnBJ,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,iBAAmB,YAAiB,IAC1BjB,EADyB,EAAbkB,OACZlB,KACR,EAAKmB,UAAS,SAAAC,GAAS,sBAAQpB,EAAOoB,EAAUpB,GAAQ,O,EAG1DqB,mBAAqB,WAGnB,OAFeC,OAAOC,OAAO,EAAKX,OACVY,QAAO,SAACC,EAAKtB,GAAN,OAAgBsB,EAAMtB,IAAO,I,EAI9DuB,gCAAkC,WAAO,IAC/BrB,EAAS,EAAKO,MAAdP,KACR,OAAOA,EAAO,EAAI,EAAIsB,KAAKC,MAAc,IAAPvB,EAAc,EAAKgB,uB,wEAIrD,OACE,oCACE,kBAAC,EAAD,CACEV,MAAM,kBACNd,gBAAiBgC,KAAKZ,mBAEvBY,KAAKR,qBAAuB,EAC3B,kBAAC,EAAD,CACEV,MAAM,aACNC,MAAOiB,KAAKjB,MACZJ,MAAOqB,KAAKR,qBACZZ,mBAAoBoB,KAAKH,oCAG3B,kBAAC,EAAD,CAAcZ,QAAQ,2B,GAtCCgB,aCAjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.7d983b32.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ onLeaveFeedback }) => (\n  <>\n    <button type=\"button\" onClick={onLeaveFeedback} name=\"good\">\n      Good\n    </button>\n    <button type=\"button\" onClick={onLeaveFeedback} name=\"neutral\">\n      Neutral\n    </button>\n    <button type=\"button\" onClick={onLeaveFeedback} name=\"bad\">\n      Bad\n    </button>\n  </>\n);\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistic = ({ label, value }) => (\n  <p>\n    {label}: {value}\n  </p>\n);\n\nStatistic.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nexport default Statistic;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Statistic from '../Statistic/Statistic';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <>\n    <Statistic label=\"Good\" value={good} />\n    <Statistic label=\"Neutral\" value={neutral} />\n    <Statistic label=\"Bad\" value={bad} />\n    <Statistic label=\"Total\" value={total} />\n    <Statistic label=\"Positive feedback\" value={positivePercentage} />\n  </>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Statistics from '../Statistics/Statistics';\n\nconst Section = ({\n  title,\n  state,\n  total,\n  positivePercentage,\n  onLeaveFeedback,\n}) => (\n  <>\n    <h2>{title === 'Statistics' ? 'Statistics' : 'Please leave feedback'}</h2>\n    {title === 'Statistics' ? (\n      <Statistics\n        good={state.good}\n        neutral={state.neutral}\n        bad={state.bad}\n        total={total}\n        positivePercentage={positivePercentage}\n      />\n    ) : (\n      <FeedbackOptions onLeaveFeedback={onLeaveFeedback} />\n    )}\n  </>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  state: PropTypes.shape({\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n  }).isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nNotification.defaultProps = {\n  message: '',\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport Section from './Section/Section';\nimport Notification from './Notification/Notification';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countClickAmount = ({ target }) => {\n    const { name } = target;\n    this.setState(prevState => ({ [name]: prevState[name] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const clicks = Object.values(this.state);\n    const feedback = clicks.reduce((acc, value) => acc + value, 0);\n    return feedback;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return good < 1 ? 0 : Math.round((good * 100) / this.countTotalFeedback());\n  };\n\n  render() {\n    return (\n      <>\n        <Section\n          title=\"FeedbackOptions\"\n          onLeaveFeedback={this.countClickAmount}\n        />\n        {this.countTotalFeedback() > 0 ? (\n          <Section\n            title=\"Statistics\"\n            state={this.state}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}